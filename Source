local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AdminGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui
screenGui.Enabled = true

local cmdBar = Instance.new("Frame")
cmdBar.Size = UDim2.new(0, 400, 0, 50)
cmdBar.Position = UDim2.new(0.5, -200, 0, 10)
cmdBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
cmdBar.BorderSizePixel = 0
cmdBar.Name = "CmdBar"
cmdBar.Parent = screenGui
cmdBar.Active = true
cmdBar.Draggable = true

local cmdBox = Instance.new("TextBox")
cmdBox.Size = UDim2.new(0, 250, 0, 30)
cmdBox.Position = UDim2.new(0, 10, 0, 10)
cmdBox.PlaceholderText = "Enter command..."
cmdBox.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
cmdBox.TextColor3 = Color3.fromRGB(255, 255, 255)
cmdBox.ClearTextOnFocus = false
cmdBox.Name = "CmdBox"
cmdBox.Parent = cmdBar
cmdBox.Font = Enum.Font.SourceSans
cmdBox.TextSize = 18
cmdBox.TextXAlignment = Enum.TextXAlignment.Left

local outputLabel = Instance.new("TextLabel")
outputLabel.Size = UDim2.new(1, -270, 1, -20)
outputLabel.Position = UDim2.new(0, 270, 0, 10)
outputLabel.BackgroundTransparency = 1
outputLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
outputLabel.TextWrapped = true
outputLabel.TextYAlignment = Enum.TextYAlignment.Top
outputLabel.TextXAlignment = Enum.TextXAlignment.Left
outputLabel.Font = Enum.Font.SourceSans
outputLabel.TextSize = 16
outputLabel.Text = ""
outputLabel.Parent = cmdBar

local helpGui = Instance.new("Frame")
helpGui.Size = UDim2.new(0, 300, 0, 400)
helpGui.Position = UDim2.new(0.5, -150, 0.5, -200)
helpGui.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
helpGui.BorderSizePixel = 0
helpGui.Name = "HelpGUI"
helpGui.Parent = screenGui
helpGui.Visible = false
helpGui.Active = true
helpGui.Draggable = true

local helpTitle = Instance.new("TextLabel")
helpTitle.Size = UDim2.new(1, 0, 0, 40)
helpTitle.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
helpTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
helpTitle.Font = Enum.Font.SourceSansBold
helpTitle.TextSize = 20
helpTitle.Text = "CommandX Help"
helpTitle.Parent = helpGui

local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 40, 0, 40)
closeBtn.Position = UDim2.new(1, -45, 0, 0)
closeBtn.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Font = Enum.Font.SourceSansBold
closeBtn.TextSize = 24
closeBtn.Text = "X"
closeBtn.Parent = helpGui

closeBtn.MouseButton1Click:Connect(function()
    helpGui.Visible = false
end)

local helpTextLabel = Instance.new("TextLabel")
helpTextLabel.Size = UDim2.new(1, -20, 1, -50)
helpTextLabel.Position = UDim2.new(0, 10, 0, 40)
helpTextLabel.BackgroundTransparency = 1
helpTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
helpTextLabel.TextWrapped = true
helpTextLabel.TextYAlignment = Enum.TextYAlignment.Top
helpTextLabel.TextXAlignment = Enum.TextXAlignment.Left
helpTextLabel.Font = Enum.Font.SourceSans
helpTextLabel.TextSize = 16
helpTextLabel.Text = ""
helpTextLabel.Parent = helpGui

local commands = {
    ["/cmds"] = "Show this command list.",
    ["/help"] = "Show this command list.",
    ["/sit"] = "Sit down.",
    ["/float"] = "Float above the ground.",
    ["/unfloat"] = "Stop floating.",
    ["/fly"] = "Toggle flying mode."
}

local function getHelpText()
    local text = ""
    for cmd, desc in pairs(commands) do
        text = text .. cmd .. " - " .. desc .. "\n\n"
    end
    return text
end

-- Sit function
local function sitPlayer(plr)
    local char = plr.Character
    if not char then return false end
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.Sit = true
        return true
    end
    return false
end

-- Float functions
local function floatPlayer(plr)
    local char = plr.Character
    if not char then return false end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return false end
    if hrp:FindFirstChild("FloatBodyPosition") then
        return false
    end
    local bp = Instance.new("BodyPosition")
    bp.Name = "FloatBodyPosition"
    bp.Position = hrp.Position + Vector3.new(0, 5, 0)
    bp.MaxForce = Vector3.new(0, 500000, 0)
    bp.D = 1000
    bp.P = 10000
    bp.Parent = hrp
    return true
end

local function unfloatPlayer(plr)
    local char = plr.Character
    if not char then return false end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return false end
    local bp = hrp:FindFirstChild("FloatBodyPosition")
    if bp then
        bp:Destroy()
        return true
    end
    return false
end

-- Fly variables
local flying = false
local flyForce

local function toggleFly(plr)
    local char = plr.Character
    if not char then return false end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if not hrp or not humanoid then return false end

    if flying then
        -- Stop flying
        if flyForce then
            flyForce:Destroy()
            flyForce = nil
        end
        humanoid.PlatformStand = false
        flying = false
        return "Fly mode disabled."
    else
        -- Start flying
        flyForce = Instance.new("BodyVelocity")
        flyForce.Name = "FlyForce"
        flyForce.MaxForce = Vector3.new(100000, 100000, 100000)
        flyForce.Velocity = Vector3.new(0, 0, 0)
        flyForce.Parent = hrp
        humanoid.PlatformStand = true
        flying = true
        return "Fly mode enabled. Use WASD and Space/Ctrl to move."
    end
end

-- Control flying with user input
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not flying then return end
    if gameProcessed then return end
    local char = player.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local velocity = Vector3.new()

    if input.KeyCode == Enum.KeyCode.W then
        velocity = velocity + (workspace.CurrentCamera.CFrame.LookVector * 50)
    elseif input.KeyCode == Enum.KeyCode.S then
        velocity = velocity - (workspace.CurrentCamera.CFrame.LookVector * 50)
    elseif input.KeyCode == Enum.KeyCode.A then
        velocity = velocity - (workspace.CurrentCamera.CFrame.RightVector * 50)
    elseif input.KeyCode == Enum.KeyCode.D then
        velocity = velocity + (workspace.CurrentCamera.CFrame.RightVector * 50)
    elseif input.KeyCode == Enum.KeyCode.Space then
        velocity = velocity + Vector3.new(0, 50, 0)
    elseif input.KeyCode == Enum.KeyCode.LeftControl then
        velocity = velocity - Vector3.new(0, 50, 0)
    end

    if flyForce then
        flyForce.Velocity = velocity
    end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if not flying then return end
    if gameProcessed then return end
    if flyForce then
        flyForce.Velocity = Vector3.new(0, 0, 0)
    end
end)

-- Toggle UI with M or T keys
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.M or input.KeyCode == Enum.KeyCode.T then
        screenGui.Enabled = not screenGui.Enabled
        if screenGui.Enabled then
            cmdBox:CaptureFocus()
        end
    end
end)

cmdBox.FocusLost:Connect(function(enterPressed)
    if not enterPressed then return end
    local text = cmdBox.Text:lower()
    cmdBox.Text = ""
    outputLabel.Text = ""

    if text == "/cmds" or text == "/help" then
        helpTextLabel.Text = getHelpText()
        helpGui.Visible = true

    elseif text == "/sit" then
        if sitPlayer(player) then
            outputLabel.Text = "You are now sitting."
        else
            outputLabel.Text = "Failed to sit."
        end

    elseif text == "/float" then
        if floatPlayer(player) then
            outputLabel.Text = "You are now floating."
        else
            outputLabel.Text = "You are already floating."
        end

    elseif text == "/unfloat" then
        if unfloatPlayer(player) then
            outputLabel.Text = "Floating stopped."
        else
            outputLabel.Text = "You were not floating."
        end

    elseif text == "/fly" then
        local message = toggleFly(player)
        outputLabel.Text = message or "Failed to toggle fly."

    else
        outputLabel.Text = "Unknown command."
    end
end)
